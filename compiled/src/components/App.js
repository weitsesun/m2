import MovieList from "./MovieList.js";
import exampleMovies from "../data/exampleMovie.js";
import SearchMovie from "./SearchMovie.js";
import AddMovie from "./AddMovie.js";

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      searchContent: "",
      movies: exampleMovies,
      isDefault: true
    };
  }

  changeText(e) {
    e.preventDefault();
    this.setState({
      searchContent: e.target.value
    });
  }
  searchlist(e) {
    e.preventDefault();
    var text = this.state.searchContent.toLowerCase();
    if (text === "") {
      this.setState({
        movies: exampleMovies
      });
      return;
    }
    var movies = this.state.movies;
    var newMovieList = [];
    for (var i = 0; i < movies.length; i++) {
      if (movies[i]["title"].toLowerCase().indexOf(text) >= 0) {
        newMovieList.push(movies[i]);
      }
    }
    this.setState({
      movies: newMovieList
    });
  }

  resetMovie(newMovie) {
    //newMovies should be an object
    if (this.state.isDefault) {
      this.setState({
        movies: [newMovie],
        isDefault: false
      });
    } else {
      let curMovie = this.state.movies;
      // console.log('newMovie: ', newMovie, ' curMovie: ', curMovie);
      if (!curMovie.includes(newMovie)) {
        curMovie.push(newMovie);
        this.setState({
          movies: curMovie
        });
      }
    }
  }

  render() {
    return React.createElement(
      "div",
      null,
      React.createElement(
        "h1",
        null,
        "Movie List"
      ),
      React.createElement(AddMovie, { reset: this.resetMovie.bind(this) }),
      React.createElement("br", null),
      React.createElement(SearchMovie, { textbar: this.changeText.bind(this), search: this.searchlist.bind(this) }),
      React.createElement("br", null),
      React.createElement(
        "div",
        { id: "movielist" },
        React.createElement(MovieList, { movies: this.state.movies })
      )
    );
  }
}

export default App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0FwcC5qc3giXSwibmFtZXMiOlsiTW92aWVMaXN0IiwiZXhhbXBsZU1vdmllcyIsIlNlYXJjaE1vdmllIiwiQWRkTW92aWUiLCJBcHAiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsInNlYXJjaENvbnRlbnQiLCJtb3ZpZXMiLCJpc0RlZmF1bHQiLCJjaGFuZ2VUZXh0IiwiZSIsInByZXZlbnREZWZhdWx0Iiwic2V0U3RhdGUiLCJ0YXJnZXQiLCJ2YWx1ZSIsInNlYXJjaGxpc3QiLCJ0ZXh0IiwidG9Mb3dlckNhc2UiLCJuZXdNb3ZpZUxpc3QiLCJpIiwibGVuZ3RoIiwiaW5kZXhPZiIsInB1c2giLCJyZXNldE1vdmllIiwibmV3TW92aWUiLCJjdXJNb3ZpZSIsImluY2x1ZGVzIiwicmVuZGVyIiwiYmluZCJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsU0FBUCxNQUFzQixnQkFBdEI7QUFDQSxPQUFPQyxhQUFQLE1BQTBCLHlCQUExQjtBQUNBLE9BQU9DLFdBQVAsTUFBd0Isa0JBQXhCO0FBQ0EsT0FBT0MsUUFBUCxNQUFxQixlQUFyQjs7QUFFQSxNQUFNQyxHQUFOLFNBQWtCQyxNQUFNQyxTQUF4QixDQUFrQztBQUNoQ0MsY0FBWUMsS0FBWixFQUFtQjtBQUNqQixVQUFNQSxLQUFOO0FBQ0EsU0FBS0MsS0FBTCxHQUFhO0FBQ1hDLHFCQUFlLEVBREo7QUFFWEMsY0FBUVYsYUFGRztBQUdYVyxpQkFBVztBQUhBLEtBQWI7QUFLRDs7QUFFREMsYUFBV0MsQ0FBWCxFQUFjO0FBQ1pBLE1BQUVDLGNBQUY7QUFDQSxTQUFLQyxRQUFMLENBQWM7QUFDWk4scUJBQWVJLEVBQUVHLE1BQUYsQ0FBU0M7QUFEWixLQUFkO0FBR0Q7QUFDREMsYUFBV0wsQ0FBWCxFQUFjO0FBQ1pBLE1BQUVDLGNBQUY7QUFDQSxRQUFJSyxPQUFPLEtBQUtYLEtBQUwsQ0FBV0MsYUFBWCxDQUF5QlcsV0FBekIsRUFBWDtBQUNBLFFBQUlELFNBQVMsRUFBYixFQUFpQjtBQUNmLFdBQUtKLFFBQUwsQ0FBYztBQUNaTCxnQkFBUVY7QUFESSxPQUFkO0FBR0E7QUFDRDtBQUNELFFBQUlVLFNBQVMsS0FBS0YsS0FBTCxDQUFXRSxNQUF4QjtBQUNBLFFBQUlXLGVBQWUsRUFBbkI7QUFDQSxTQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSVosT0FBT2EsTUFBM0IsRUFBbUNELEdBQW5DLEVBQXdDO0FBQ3RDLFVBQUlaLE9BQU9ZLENBQVAsRUFBVSxPQUFWLEVBQW1CRixXQUFuQixHQUFpQ0ksT0FBakMsQ0FBeUNMLElBQXpDLEtBQWtELENBQXRELEVBQXlEO0FBQ3ZERSxxQkFBYUksSUFBYixDQUFrQmYsT0FBT1ksQ0FBUCxDQUFsQjtBQUNEO0FBQ0Y7QUFDRCxTQUFLUCxRQUFMLENBQWM7QUFDWkwsY0FBUVc7QUFESSxLQUFkO0FBR0Q7O0FBRURLLGFBQVdDLFFBQVgsRUFBcUI7QUFDbkI7QUFDQSxRQUFJLEtBQUtuQixLQUFMLENBQVdHLFNBQWYsRUFBMEI7QUFDeEIsV0FBS0ksUUFBTCxDQUFjO0FBQ1pMLGdCQUFRLENBQUNpQixRQUFELENBREk7QUFFWmhCLG1CQUFXO0FBRkMsT0FBZDtBQUlELEtBTEQsTUFLTztBQUNMLFVBQUlpQixXQUFXLEtBQUtwQixLQUFMLENBQVdFLE1BQTFCO0FBQ0E7QUFDQSxVQUFJLENBQUNrQixTQUFTQyxRQUFULENBQWtCRixRQUFsQixDQUFMLEVBQWtDO0FBQ2hDQyxpQkFBU0gsSUFBVCxDQUFjRSxRQUFkO0FBQ0EsYUFBS1osUUFBTCxDQUFjO0FBQ1pMLGtCQUFRa0I7QUFESSxTQUFkO0FBR0Q7QUFDRjtBQUNGOztBQUVERSxXQUFTO0FBQ1AsV0FDRTtBQUFBO0FBQUE7QUFDRTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BREY7QUFFRSwwQkFBQyxRQUFELElBQVUsT0FBTyxLQUFLSixVQUFMLENBQWdCSyxJQUFoQixDQUFxQixJQUFyQixDQUFqQixHQUZGO0FBR0UscUNBSEY7QUFJRSwwQkFBQyxXQUFELElBQWEsU0FBUyxLQUFLbkIsVUFBTCxDQUFnQm1CLElBQWhCLENBQXFCLElBQXJCLENBQXRCLEVBQWtELFFBQVEsS0FBS2IsVUFBTCxDQUFnQmEsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBMUQsR0FKRjtBQUtFLHFDQUxGO0FBTUU7QUFBQTtBQUFBLFVBQUssSUFBRyxXQUFSO0FBQ0ksNEJBQUMsU0FBRCxJQUFXLFFBQVEsS0FBS3ZCLEtBQUwsQ0FBV0UsTUFBOUI7QUFESjtBQU5GLEtBREY7QUFZRDtBQXJFK0I7O0FBd0VsQyxlQUFlUCxHQUFmIiwiZmlsZSI6IkFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNb3ZpZUxpc3QgZnJvbSBcIi4vTW92aWVMaXN0LmpzXCI7XG5pbXBvcnQgZXhhbXBsZU1vdmllcyBmcm9tIFwiLi4vZGF0YS9leGFtcGxlTW92aWUuanNcIjtcbmltcG9ydCBTZWFyY2hNb3ZpZSBmcm9tIFwiLi9TZWFyY2hNb3ZpZS5qc1wiO1xuaW1wb3J0IEFkZE1vdmllIGZyb20gXCIuL0FkZE1vdmllLmpzXCI7XG5cbmNsYXNzIEFwcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBzZWFyY2hDb250ZW50OiBcIlwiLFxuICAgICAgbW92aWVzOiBleGFtcGxlTW92aWVzLFxuICAgICAgaXNEZWZhdWx0OiB0cnVlXG4gICAgfVxuICB9XG5cbiAgY2hhbmdlVGV4dChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgc2VhcmNoQ29udGVudDogZS50YXJnZXQudmFsdWVcbiAgICB9KVxuICB9XG4gIHNlYXJjaGxpc3QoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB2YXIgdGV4dCA9IHRoaXMuc3RhdGUuc2VhcmNoQ29udGVudC50b0xvd2VyQ2FzZSgpO1xuICAgIGlmICh0ZXh0ID09PSBcIlwiKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbW92aWVzOiBleGFtcGxlTW92aWVzXG4gICAgICB9KVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgbW92aWVzID0gdGhpcy5zdGF0ZS5tb3ZpZXM7XG4gICAgdmFyIG5ld01vdmllTGlzdCA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbW92aWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAobW92aWVzW2ldW1widGl0bGVcIl0udG9Mb3dlckNhc2UoKS5pbmRleE9mKHRleHQpID49IDApIHtcbiAgICAgICAgbmV3TW92aWVMaXN0LnB1c2gobW92aWVzW2ldKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBtb3ZpZXM6IG5ld01vdmllTGlzdFxuICAgIH0pXG4gIH1cblxuICByZXNldE1vdmllKG5ld01vdmllKSB7XG4gICAgLy9uZXdNb3ZpZXMgc2hvdWxkIGJlIGFuIG9iamVjdFxuICAgIGlmICh0aGlzLnN0YXRlLmlzRGVmYXVsdCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG1vdmllczogW25ld01vdmllXSxcbiAgICAgICAgaXNEZWZhdWx0OiBmYWxzZVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBjdXJNb3ZpZSA9IHRoaXMuc3RhdGUubW92aWVzO1xuICAgICAgLy8gY29uc29sZS5sb2coJ25ld01vdmllOiAnLCBuZXdNb3ZpZSwgJyBjdXJNb3ZpZTogJywgY3VyTW92aWUpO1xuICAgICAgaWYgKCFjdXJNb3ZpZS5pbmNsdWRlcyhuZXdNb3ZpZSkpIHtcbiAgICAgICAgY3VyTW92aWUucHVzaChuZXdNb3ZpZSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIG1vdmllczogY3VyTW92aWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDE+TW92aWUgTGlzdDwvaDE+XG4gICAgICAgIDxBZGRNb3ZpZSByZXNldD17dGhpcy5yZXNldE1vdmllLmJpbmQodGhpcyl9IC8+XG4gICAgICAgIDxiciAvPlxuICAgICAgICA8U2VhcmNoTW92aWUgdGV4dGJhcj17dGhpcy5jaGFuZ2VUZXh0LmJpbmQodGhpcyl9IHNlYXJjaD17dGhpcy5zZWFyY2hsaXN0LmJpbmQodGhpcyl9IC8+XG4gICAgICAgIDxiciAvPlxuICAgICAgICA8ZGl2IGlkPVwibW92aWVsaXN0XCI+XG4gICAgICAgICAgICA8TW92aWVMaXN0IG1vdmllcz17dGhpcy5zdGF0ZS5tb3ZpZXN9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDsiXX0=